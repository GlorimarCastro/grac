Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ALL

Grammar

Rule 0     S' -> program
Rule 1     program -> GRAC_START { statement_list }
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement ; statement_list
Rule 4     statement -> method
Rule 5     statement -> assignment
Rule 6     method -> classifier
Rule 7     method -> classifier_methods
Rule 8     method -> upload_methods
Rule 9     method -> csv_methods
Rule 10    method -> printResults
Rule 11    method -> statistics_methods
Rule 12    classifier -> CLASSIFIERS
Rule 13    classifier_methods -> CLASSIFIER_METHOD
Rule 14    classifier_methods -> CLASSIFIER_METHOD_WPARAMETER ( )
Rule 15    upload_methods -> UPLOAD_COMMAND ( PATH )
Rule 16    csv_methods -> CSV_SAVERESULT ( PATH )
Rule 17    printResults -> PRINT
Rule 18    statistics_methods -> STATISTICS ( ID )
Rule 19    statistics_methods -> STATISTICS ( INT )
Rule 20    statistics_methods -> STATISTICS ( array_list )
Rule 21    assignment -> crossvalidation_assignment
Rule 22    assignment -> csv_assignment
Rule 23    assignment -> ID = array_list
Rule 24    crossvalidation_assignment -> KFOLD = INT
Rule 25    crossvalidation_assignment -> CROSSVALIDATIONACTION = BOOLEAN
Rule 26    csv_assignment -> CSV_HEADER = BOOLEAN
Rule 27    csv_assignment -> CSV_CLASSCOLUMN = INT
Rule 28    csv_assignment -> CSV_FEATURESCOLUMNS = array_list
Rule 29    csv_assignment -> CSV_TESTCLASSCOLUMN = INT
Rule 30    csv_assignment -> CSV_TESTFEATURESCOLUMNS = array_list
Rule 31    array_list -> [ list ]
Rule 32    list -> INT
Rule 33    list -> INT , list

Terminals, with rules where they appear

(                    : 14 15 16 18 19 20
)                    : 14 15 16 18 19 20
,                    : 33
;                    : 3
=                    : 23 24 25 26 27 28 29 30
ALL                  : 
BOOLEAN              : 25 26
CLASSIFIERS          : 12
CLASSIFIER_METHOD    : 13
CLASSIFIER_METHOD_WPARAMETER : 14
COMMENT              : 
CROSSVALIDATIONACTION : 25
CSV_CLASSCOLUMN      : 27
CSV_FEATURESCOLUMNS  : 28
CSV_HEADER           : 26
CSV_SAVERESULT       : 16
CSV_TESTCLASSCOLUMN  : 29
CSV_TESTFEATURESCOLUMNS : 30
GRAC_START           : 1
ID                   : 18 23
INT                  : 19 24 27 29 32 33
KFOLD                : 24
PATH                 : 15 16
PRINT                : 17
STATISTICS           : 18 19 20
UPLOAD_COMMAND       : 15
[                    : 31
]                    : 31
error                : 
{                    : 1
}                    : 1

Nonterminals, with rules where they appear

array_list           : 20 23 28 30
assignment           : 5
classifier           : 6
classifier_methods   : 7
crossvalidation_assignment : 21
csv_assignment       : 22
csv_methods          : 9
list                 : 31 33
method               : 4
printResults         : 10
program              : 0
statement            : 2 3
statement_list       : 1 3
statistics_methods   : 11
upload_methods       : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . GRAC_START { statement_list }

    GRAC_START      shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> GRAC_START . { statement_list }

    {               shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> GRAC_START { . statement_list }
    (2) statement_list -> . statement
    (3) statement_list -> . statement ; statement_list
    (4) statement -> . method
    (5) statement -> . assignment
    (6) method -> . classifier
    (7) method -> . classifier_methods
    (8) method -> . upload_methods
    (9) method -> . csv_methods
    (10) method -> . printResults
    (11) method -> . statistics_methods
    (21) assignment -> . crossvalidation_assignment
    (22) assignment -> . csv_assignment
    (23) assignment -> . ID = array_list
    (12) classifier -> . CLASSIFIERS
    (13) classifier_methods -> . CLASSIFIER_METHOD
    (14) classifier_methods -> . CLASSIFIER_METHOD_WPARAMETER ( )
    (15) upload_methods -> . UPLOAD_COMMAND ( PATH )
    (16) csv_methods -> . CSV_SAVERESULT ( PATH )
    (17) printResults -> . PRINT
    (18) statistics_methods -> . STATISTICS ( ID )
    (19) statistics_methods -> . STATISTICS ( INT )
    (20) statistics_methods -> . STATISTICS ( array_list )
    (24) crossvalidation_assignment -> . KFOLD = INT
    (25) crossvalidation_assignment -> . CROSSVALIDATIONACTION = BOOLEAN
    (26) csv_assignment -> . CSV_HEADER = BOOLEAN
    (27) csv_assignment -> . CSV_CLASSCOLUMN = INT
    (28) csv_assignment -> . CSV_FEATURESCOLUMNS = array_list
    (29) csv_assignment -> . CSV_TESTCLASSCOLUMN = INT
    (30) csv_assignment -> . CSV_TESTFEATURESCOLUMNS = array_list

    ID              shift and go to state 23
    CLASSIFIERS     shift and go to state 30
    CLASSIFIER_METHOD shift and go to state 24
    CLASSIFIER_METHOD_WPARAMETER shift and go to state 5
    UPLOAD_COMMAND  shift and go to state 13
    CSV_SAVERESULT  shift and go to state 10
    PRINT           shift and go to state 11
    STATISTICS      shift and go to state 25
    KFOLD           shift and go to state 26
    CROSSVALIDATIONACTION shift and go to state 12
    CSV_HEADER      shift and go to state 22
    CSV_CLASSCOLUMN shift and go to state 4
    CSV_FEATURESCOLUMNS shift and go to state 8
    CSV_TESTCLASSCOLUMN shift and go to state 14
    CSV_TESTFEATURESCOLUMNS shift and go to state 7

    printResults                   shift and go to state 16
    assignment                     shift and go to state 19
    upload_methods                 shift and go to state 6
    crossvalidation_assignment     shift and go to state 20
    csv_assignment                 shift and go to state 15
    classifier                     shift and go to state 27
    csv_methods                    shift and go to state 29
    classifier_methods             shift and go to state 28
    statistics_methods             shift and go to state 9
    statement                      shift and go to state 17
    statement_list                 shift and go to state 21
    method                         shift and go to state 18

state 4

    (27) csv_assignment -> CSV_CLASSCOLUMN . = INT

    =               shift and go to state 31


state 5

    (14) classifier_methods -> CLASSIFIER_METHOD_WPARAMETER . ( )

    (               shift and go to state 32


state 6

    (8) method -> upload_methods .

    ;               reduce using rule 8 (method -> upload_methods .)
    }               reduce using rule 8 (method -> upload_methods .)


state 7

    (30) csv_assignment -> CSV_TESTFEATURESCOLUMNS . = array_list

    =               shift and go to state 33


state 8

    (28) csv_assignment -> CSV_FEATURESCOLUMNS . = array_list

    =               shift and go to state 34


state 9

    (11) method -> statistics_methods .

    ;               reduce using rule 11 (method -> statistics_methods .)
    }               reduce using rule 11 (method -> statistics_methods .)


state 10

    (16) csv_methods -> CSV_SAVERESULT . ( PATH )

    (               shift and go to state 35


state 11

    (17) printResults -> PRINT .

    ;               reduce using rule 17 (printResults -> PRINT .)
    }               reduce using rule 17 (printResults -> PRINT .)


state 12

    (25) crossvalidation_assignment -> CROSSVALIDATIONACTION . = BOOLEAN

    =               shift and go to state 36


state 13

    (15) upload_methods -> UPLOAD_COMMAND . ( PATH )

    (               shift and go to state 37


state 14

    (29) csv_assignment -> CSV_TESTCLASSCOLUMN . = INT

    =               shift and go to state 38


state 15

    (22) assignment -> csv_assignment .

    ;               reduce using rule 22 (assignment -> csv_assignment .)
    }               reduce using rule 22 (assignment -> csv_assignment .)


state 16

    (10) method -> printResults .

    ;               reduce using rule 10 (method -> printResults .)
    }               reduce using rule 10 (method -> printResults .)


state 17

    (2) statement_list -> statement .
    (3) statement_list -> statement . ; statement_list

    }               reduce using rule 2 (statement_list -> statement .)
    ;               shift and go to state 39


state 18

    (4) statement -> method .

    ;               reduce using rule 4 (statement -> method .)
    }               reduce using rule 4 (statement -> method .)


state 19

    (5) statement -> assignment .

    ;               reduce using rule 5 (statement -> assignment .)
    }               reduce using rule 5 (statement -> assignment .)


state 20

    (21) assignment -> crossvalidation_assignment .

    ;               reduce using rule 21 (assignment -> crossvalidation_assignment .)
    }               reduce using rule 21 (assignment -> crossvalidation_assignment .)


state 21

    (1) program -> GRAC_START { statement_list . }

    }               shift and go to state 40


state 22

    (26) csv_assignment -> CSV_HEADER . = BOOLEAN

    =               shift and go to state 41


state 23

    (23) assignment -> ID . = array_list

    =               shift and go to state 42


state 24

    (13) classifier_methods -> CLASSIFIER_METHOD .

    ;               reduce using rule 13 (classifier_methods -> CLASSIFIER_METHOD .)
    }               reduce using rule 13 (classifier_methods -> CLASSIFIER_METHOD .)


state 25

    (18) statistics_methods -> STATISTICS . ( ID )
    (19) statistics_methods -> STATISTICS . ( INT )
    (20) statistics_methods -> STATISTICS . ( array_list )

    (               shift and go to state 43


state 26

    (24) crossvalidation_assignment -> KFOLD . = INT

    =               shift and go to state 44


state 27

    (6) method -> classifier .

    ;               reduce using rule 6 (method -> classifier .)
    }               reduce using rule 6 (method -> classifier .)


state 28

    (7) method -> classifier_methods .

    ;               reduce using rule 7 (method -> classifier_methods .)
    }               reduce using rule 7 (method -> classifier_methods .)


state 29

    (9) method -> csv_methods .

    ;               reduce using rule 9 (method -> csv_methods .)
    }               reduce using rule 9 (method -> csv_methods .)


state 30

    (12) classifier -> CLASSIFIERS .

    ;               reduce using rule 12 (classifier -> CLASSIFIERS .)
    }               reduce using rule 12 (classifier -> CLASSIFIERS .)


state 31

    (27) csv_assignment -> CSV_CLASSCOLUMN = . INT

    INT             shift and go to state 45


state 32

    (14) classifier_methods -> CLASSIFIER_METHOD_WPARAMETER ( . )

    )               shift and go to state 46


state 33

    (30) csv_assignment -> CSV_TESTFEATURESCOLUMNS = . array_list
    (31) array_list -> . [ list ]

    [               shift and go to state 48

    array_list                     shift and go to state 47

state 34

    (28) csv_assignment -> CSV_FEATURESCOLUMNS = . array_list
    (31) array_list -> . [ list ]

    [               shift and go to state 48

    array_list                     shift and go to state 49

state 35

    (16) csv_methods -> CSV_SAVERESULT ( . PATH )

    PATH            shift and go to state 50


state 36

    (25) crossvalidation_assignment -> CROSSVALIDATIONACTION = . BOOLEAN

    BOOLEAN         shift and go to state 51


state 37

    (15) upload_methods -> UPLOAD_COMMAND ( . PATH )

    PATH            shift and go to state 52


state 38

    (29) csv_assignment -> CSV_TESTCLASSCOLUMN = . INT

    INT             shift and go to state 53


state 39

    (3) statement_list -> statement ; . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement ; statement_list
    (4) statement -> . method
    (5) statement -> . assignment
    (6) method -> . classifier
    (7) method -> . classifier_methods
    (8) method -> . upload_methods
    (9) method -> . csv_methods
    (10) method -> . printResults
    (11) method -> . statistics_methods
    (21) assignment -> . crossvalidation_assignment
    (22) assignment -> . csv_assignment
    (23) assignment -> . ID = array_list
    (12) classifier -> . CLASSIFIERS
    (13) classifier_methods -> . CLASSIFIER_METHOD
    (14) classifier_methods -> . CLASSIFIER_METHOD_WPARAMETER ( )
    (15) upload_methods -> . UPLOAD_COMMAND ( PATH )
    (16) csv_methods -> . CSV_SAVERESULT ( PATH )
    (17) printResults -> . PRINT
    (18) statistics_methods -> . STATISTICS ( ID )
    (19) statistics_methods -> . STATISTICS ( INT )
    (20) statistics_methods -> . STATISTICS ( array_list )
    (24) crossvalidation_assignment -> . KFOLD = INT
    (25) crossvalidation_assignment -> . CROSSVALIDATIONACTION = BOOLEAN
    (26) csv_assignment -> . CSV_HEADER = BOOLEAN
    (27) csv_assignment -> . CSV_CLASSCOLUMN = INT
    (28) csv_assignment -> . CSV_FEATURESCOLUMNS = array_list
    (29) csv_assignment -> . CSV_TESTCLASSCOLUMN = INT
    (30) csv_assignment -> . CSV_TESTFEATURESCOLUMNS = array_list

    ID              shift and go to state 23
    CLASSIFIERS     shift and go to state 30
    CLASSIFIER_METHOD shift and go to state 24
    CLASSIFIER_METHOD_WPARAMETER shift and go to state 5
    UPLOAD_COMMAND  shift and go to state 13
    CSV_SAVERESULT  shift and go to state 10
    PRINT           shift and go to state 11
    STATISTICS      shift and go to state 25
    KFOLD           shift and go to state 26
    CROSSVALIDATIONACTION shift and go to state 12
    CSV_HEADER      shift and go to state 22
    CSV_CLASSCOLUMN shift and go to state 4
    CSV_FEATURESCOLUMNS shift and go to state 8
    CSV_TESTCLASSCOLUMN shift and go to state 14
    CSV_TESTFEATURESCOLUMNS shift and go to state 7

    printResults                   shift and go to state 16
    assignment                     shift and go to state 19
    upload_methods                 shift and go to state 6
    crossvalidation_assignment     shift and go to state 20
    csv_assignment                 shift and go to state 15
    classifier                     shift and go to state 27
    csv_methods                    shift and go to state 29
    classifier_methods             shift and go to state 28
    statistics_methods             shift and go to state 9
    statement                      shift and go to state 17
    statement_list                 shift and go to state 54
    method                         shift and go to state 18

state 40

    (1) program -> GRAC_START { statement_list } .

    $end            reduce using rule 1 (program -> GRAC_START { statement_list } .)


state 41

    (26) csv_assignment -> CSV_HEADER = . BOOLEAN

    BOOLEAN         shift and go to state 55


state 42

    (23) assignment -> ID = . array_list
    (31) array_list -> . [ list ]

    [               shift and go to state 48

    array_list                     shift and go to state 56

state 43

    (18) statistics_methods -> STATISTICS ( . ID )
    (19) statistics_methods -> STATISTICS ( . INT )
    (20) statistics_methods -> STATISTICS ( . array_list )
    (31) array_list -> . [ list ]

    ID              shift and go to state 59
    INT             shift and go to state 57
    [               shift and go to state 48

    array_list                     shift and go to state 58

state 44

    (24) crossvalidation_assignment -> KFOLD = . INT

    INT             shift and go to state 60


state 45

    (27) csv_assignment -> CSV_CLASSCOLUMN = INT .

    ;               reduce using rule 27 (csv_assignment -> CSV_CLASSCOLUMN = INT .)
    }               reduce using rule 27 (csv_assignment -> CSV_CLASSCOLUMN = INT .)


state 46

    (14) classifier_methods -> CLASSIFIER_METHOD_WPARAMETER ( ) .

    ;               reduce using rule 14 (classifier_methods -> CLASSIFIER_METHOD_WPARAMETER ( ) .)
    }               reduce using rule 14 (classifier_methods -> CLASSIFIER_METHOD_WPARAMETER ( ) .)


state 47

    (30) csv_assignment -> CSV_TESTFEATURESCOLUMNS = array_list .

    ;               reduce using rule 30 (csv_assignment -> CSV_TESTFEATURESCOLUMNS = array_list .)
    }               reduce using rule 30 (csv_assignment -> CSV_TESTFEATURESCOLUMNS = array_list .)


state 48

    (31) array_list -> [ . list ]
    (32) list -> . INT
    (33) list -> . INT , list

    INT             shift and go to state 61

    list                           shift and go to state 62

state 49

    (28) csv_assignment -> CSV_FEATURESCOLUMNS = array_list .

    ;               reduce using rule 28 (csv_assignment -> CSV_FEATURESCOLUMNS = array_list .)
    }               reduce using rule 28 (csv_assignment -> CSV_FEATURESCOLUMNS = array_list .)


state 50

    (16) csv_methods -> CSV_SAVERESULT ( PATH . )

    )               shift and go to state 63


state 51

    (25) crossvalidation_assignment -> CROSSVALIDATIONACTION = BOOLEAN .

    ;               reduce using rule 25 (crossvalidation_assignment -> CROSSVALIDATIONACTION = BOOLEAN .)
    }               reduce using rule 25 (crossvalidation_assignment -> CROSSVALIDATIONACTION = BOOLEAN .)


state 52

    (15) upload_methods -> UPLOAD_COMMAND ( PATH . )

    )               shift and go to state 64


state 53

    (29) csv_assignment -> CSV_TESTCLASSCOLUMN = INT .

    ;               reduce using rule 29 (csv_assignment -> CSV_TESTCLASSCOLUMN = INT .)
    }               reduce using rule 29 (csv_assignment -> CSV_TESTCLASSCOLUMN = INT .)


state 54

    (3) statement_list -> statement ; statement_list .

    }               reduce using rule 3 (statement_list -> statement ; statement_list .)


state 55

    (26) csv_assignment -> CSV_HEADER = BOOLEAN .

    ;               reduce using rule 26 (csv_assignment -> CSV_HEADER = BOOLEAN .)
    }               reduce using rule 26 (csv_assignment -> CSV_HEADER = BOOLEAN .)


state 56

    (23) assignment -> ID = array_list .

    ;               reduce using rule 23 (assignment -> ID = array_list .)
    }               reduce using rule 23 (assignment -> ID = array_list .)


state 57

    (19) statistics_methods -> STATISTICS ( INT . )

    )               shift and go to state 65


state 58

    (20) statistics_methods -> STATISTICS ( array_list . )

    )               shift and go to state 66


state 59

    (18) statistics_methods -> STATISTICS ( ID . )

    )               shift and go to state 67


state 60

    (24) crossvalidation_assignment -> KFOLD = INT .

    ;               reduce using rule 24 (crossvalidation_assignment -> KFOLD = INT .)
    }               reduce using rule 24 (crossvalidation_assignment -> KFOLD = INT .)


state 61

    (32) list -> INT .
    (33) list -> INT . , list

    ]               reduce using rule 32 (list -> INT .)
    ,               shift and go to state 68


state 62

    (31) array_list -> [ list . ]

    ]               shift and go to state 69


state 63

    (16) csv_methods -> CSV_SAVERESULT ( PATH ) .

    ;               reduce using rule 16 (csv_methods -> CSV_SAVERESULT ( PATH ) .)
    }               reduce using rule 16 (csv_methods -> CSV_SAVERESULT ( PATH ) .)


state 64

    (15) upload_methods -> UPLOAD_COMMAND ( PATH ) .

    ;               reduce using rule 15 (upload_methods -> UPLOAD_COMMAND ( PATH ) .)
    }               reduce using rule 15 (upload_methods -> UPLOAD_COMMAND ( PATH ) .)


state 65

    (19) statistics_methods -> STATISTICS ( INT ) .

    ;               reduce using rule 19 (statistics_methods -> STATISTICS ( INT ) .)
    }               reduce using rule 19 (statistics_methods -> STATISTICS ( INT ) .)


state 66

    (20) statistics_methods -> STATISTICS ( array_list ) .

    ;               reduce using rule 20 (statistics_methods -> STATISTICS ( array_list ) .)
    }               reduce using rule 20 (statistics_methods -> STATISTICS ( array_list ) .)


state 67

    (18) statistics_methods -> STATISTICS ( ID ) .

    ;               reduce using rule 18 (statistics_methods -> STATISTICS ( ID ) .)
    }               reduce using rule 18 (statistics_methods -> STATISTICS ( ID ) .)


state 68

    (33) list -> INT , . list
    (32) list -> . INT
    (33) list -> . INT , list

    INT             shift and go to state 61

    list                           shift and go to state 70

state 69

    (31) array_list -> [ list ] .

    ;               reduce using rule 31 (array_list -> [ list ] .)
    }               reduce using rule 31 (array_list -> [ list ] .)
    )               reduce using rule 31 (array_list -> [ list ] .)


state 70

    (33) list -> INT , list .

    ]               reduce using rule 33 (list -> INT , list .)

